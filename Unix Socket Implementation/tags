!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BINDIR	Makefile	/^BINDIR	=	bin$/;"	m
CC	Makefile	/^CC		=	gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS	= 	-g -std=c99$/;"	m
SRCDIR	Makefile	/^SRCDIR	=	src$/;"	m
UTIL	src/utils/util.h	2;"	d
calculateSequenceLength	src/server/randomReaderTest.c	/^int calculateSequenceLength(int bitNumber)$/;"	f	signature:(int bitNumber)
calculate_sequence_size	src/utils/util.c	/^int calculate_sequence_size(int bit_number)$/;"	f	signature:(int bit_number)
calculate_sequence_size	src/utils/util.h	/^int calculate_sequence_size(int bit_number);$/;"	p	signature:(int bit_number)
default_protocol	src/client/client.c	/^const int default_protocol = 0;$/;"	v
default_protocol	src/server/server.c	/^const int default_protocol = 0;$/;"	v
generate_random_sequence	src/utils/util.c	/^int8_t* generate_random_sequence(int8_t* random_sequence, int nbytes)$/;"	f	signature:(int8_t* random_sequence, int nbytes)
generate_random_sequence	src/utils/util.h	/^int8_t* generate_random_sequence(int8_t* random_sequence, int nbytes);$/;"	p	signature:(int8_t* random_sequence, int nbytes)
main	src/client/client.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	src/server/randomReaderTest.c	/^int main (int argc, char const* argv[])$/;"	f	signature:(int argc, char const* argv[])
main	src/server/server.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
print_sequence	src/utils/util.c	/^void print_sequence(int8_t* sequnece, int sequence_size) $/;"	f	signature:(int8_t* sequnece, int sequence_size)
print_sequence	src/utils/util.h	/^void print_sequence(int8_t* sequnece, int sequence_size);$/;"	p	signature:(int8_t* sequnece, int sequence_size)
readn	src/utils/util.c	/^ssize_t readn(int fd, void *vptr, size_t n)$/;"	f	signature:(int fd, void *vptr, size_t n)
readn	src/utils/util.h	/^ssize_t readn(int fd, void *vptr, size_t n);$/;"	p	signature:(int fd, void *vptr, size_t n)
writen	src/utils/util.c	/^ssize_t writen(int fd, const void *vptr, size_t n)$/;"	f	signature:(int fd, const void *vptr, size_t n)
writen	src/utils/util.h	/^ssize_t writen(int fd, const void *vptr, size_t n);$/;"	p	signature:(int fd, const void *vptr, size_t n)
